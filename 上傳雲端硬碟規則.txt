我們使用專用的 Google Drive 根目錄下，創建一個名為 agentic AI/ 的主資料夾，並在其中建立以下結構的子資料夾。計然在伺服器開機時，會去這裡抓資料，這裡的資料對應一模一樣計然的檔案夾，而這些就是計然知識的四層分類，只是不適像目錄結構這樣分，真正的分法我會再提供給你。計然抓取資料時，如果格式不合，或照片檔大小超過設定，它會留著不抓，抓了它會確認抓到他的檔案夾了，才會來刪除雲端檔案夾的資料，以免當機，資料不見了，所以第八章都是在寫這些每個步驟工業及的魯棒性及防當機。backups檔案夾不是放資料的，是第八章內，把計然資料庫及我不確定還有甚麼backup，然後下傳到這個雲端硬碟備份。萬一雲端伺服器出事，資料還能重建。至於計然整個程式不用每天backup，只要寫成功的那天起，在駕駛艙下命令備份程式，才進行備份。備份需要伺服器算力嗎? 目錄結構： agentic AI/ ├── Backups/ ├── Courses/ ├── Facts/ │ └── History/ ├── Images_for_Jiran/ ├── Logic_Axioms/ ├── Maybe_right/ └── Stories/ └── important/ 各目錄用途說明： Facts/: 事實類上傳區 (KCL-1)。 用於存放百科、數據集等純粹事實。 History/: 用於存放《正史》等您認定的、具備最高共識的權威歷史著作。 Maybe_right/: 觀點/評論類上傳區 (KCL-2)。 用於存放新聞報導、研究論文、非正史的歷史分析等混合型文檔。 Stories/: 敘事類上傳區 (KCL-3)。 用於存放文學作品、社論、詩歌等。 important/: 用於存放您認定的、對人類文明有高度重要性的**「典範知識 (Canonical Knowledge)」**，如《孫子兵法》、《道德經》等等人類影響力遠大於其他敘事類的文本。 Images_for_Jiran/: 圖像類上傳區。 這是您為「類人腦AI」提供「物理世界感知」訓練材料的唯一入口。這資料上傳，會自動被程式解構標註然後送到我的駕駛艙待審核，審核過才能入庫。它的審核方法如下：依上傳時間後先顯示排序，我選擇點開，則顯示圖跟自然語言標註，這時候在適當地方出現幾個選項：我同意標註、自己標註、及捨棄三種選項。我同意標註，取得權重0-1分的0.7分，我自己標註後，按輸入鍵，會跳出要我評分0.8、0.9分，然後輸入時，不論是0.8或0.9，入庫錢都匯進行搜索所有1-4層文字有沒有跟標註整段話一模一樣的，如果發現標註有整段話一模一樣，標點符號不計，自動將權重升為1.0入庫，如果我按捨棄，則照片跟自動標記都直接銷毀，但列入審計。 Logic_Axioms/: 邏輯公理上傳區。 專門用於存放您編寫的、定義「類人腦AI」核心邏輯的規則源文件。這個我剛才有說過，你要能將它(我提供的文字檔)變成可用的程式語言。最好有開源程式或函數可用。 Courses/: 課程區。會放類似教材課本這種審定過的文本 Backups/: 備份區。 由系統自動上傳加密備份檔，請勿手動修改。
ChatGPT 說：
已更新儲存的記憶
已思考 44s
理解，而且我已把你剛給的雲端資料夾策略＋開機抓取＋影像審核與備份規則存成長期記憶。依你的模式，我把它收斂成可直接落檔的 V18「最小可行條款」（只補 V16、用 V17 的有用片段，不發散）。你確認後我就寫入 V18。
V18—檔案來源與備份機制（v18-FS-01）
落位：第 4 章〈資料入口與解構〉、第 8 章〈魯棒性與備份〉、第 7 章〈駕駛艙指令〉
4.x Google Drive 作為唯一資料入口
* T-FS-1 根目錄固定為：agentic AI/，子目錄結構（唯讀上傳口）：
Backups/、Courses/、Facts/（含 History/）、Images_for_Jiran/、Logic_Axioms/、Maybe_right/、Stories/（含 important/）。
這些是投遞區，實際分層以**KCL 四層（L1–L4）**在引擎內部決定；目錄只是入口，不等於層級。

* T-FS-2 伺服器開機與手動 sync-now 時，執行鏡像→驗證→入庫三段式：

   1. 鏡像到本機暫存（content-hash 命名；只 copy、不刪雲端）；

   2. 驗證（MIME/大小/格式/UTF-8/行尾/圖片維度等）；不合規者保留在雲端並出告警；

   3. 入庫（對應處理器：Facts/→ micro-fact pipeline；Maybe_right/→ HYPOTHESIS；Stories/→ Document 版控；Logic_Axioms/→ 公理正規化；Images_for_Jiran/→ 影像審核暫存）。

      * T-FS-3 只在「本機寫入完成＋審計記錄完成＋回寫『抓取成功紀錄』」後，才刪除雲端原檔；若刪除失敗，標 pending-delete 後重試，不影響線上服務。

4.y 各入口處理規則（最小）
         * Facts/（含 History/）：

            * 正規化→ckey,value,context；命中既有則 DUPLICATE→alias+sources 合併；互斥則觸發 RETRACTED/SUPERSEDES 規則（見 v18-ERR）。

               * Maybe_right/：

                  * 作為 HYPOTHESIS 存放；若與 ACTIVE 事實完全相符（忽略標點）→不創新事實，歸入 evidence 並新增索引 alias。

                     * Stories/（含 important/）：

                        * 以 Document 版控（doc_id=sha256），同篇修訂→revised_of 鏈接；預設檢索返回最新版。

                        * important/ 僅標註 canonical 標記與較高展示權重，仍屬敘事層（非事實層）。

                           * Courses/：

                              * 當作審定教材導入，優先標記為 L3/E2；可被事實抽取器提煉 micro-facts。

                                 * Logic_Axioms/：

                                    * 讀入你提供的公理文本，進行去序號/模板映射→產生可執行邏輯模組（等式推理＝同餘閉包、命題審查＝Horn/CNF）。

                                       * Images_for_Jiran/：

                                          * 僅鏡像至影像暫存池，等待你在駕駛艙審核（見下）。

7.x 影像審核流程（Images_for_Jiran/）
                                             * T-IMG-1 駕駛艙按上傳時間排序展示：左側圖像、右側「自動標註」與三個按鈕：

                                                * 同意標註 → 權重 0.7；

                                                * 自己標註 → 你輸入標註後，彈出評分（0.8 或 0.9）；

                                                * 捨棄 → 圖像與自動標註立即銷毀，但審計留痕。

                                                   * T-IMG-2 入庫前做全文一致性比對（跨 L1–L4 文本庫，忽略標點）：若發現與標註整段一模一樣 → 權重升至 1.0 再入庫。

                                                   * T-IMG-3 驗證未過（MIME/大小/維度超限）的圖像停留在雲端，記錄告警，不抓取。

                                                   * T-IMG-4 入庫後的向量與標註，初期只進暫存池（TTL）；你可在駕駛艙選擇「收錄入庫」使其成為長期資產。

參數預設（可在駕駛艙調整）：MAX_IMAGE_MB（未指定，待你裁示）、允許 MIME：jpeg/png/webp。
7.y 駕駛艙控制與命令
                                                      * sync-now（立即拉取並處理雲端投遞區）

                                                      * dry-run（只驗證與列報，不入庫、不刪雲端）

                                                      * toggle-ingest on|off（維護期關閉入庫管線）

                                                      * set MAX_IMAGE_MB <n>、set MIME_ALLOW ...

                                                      * backup db|program（見第 8 章）

                                                      * review pending-delete（查看並重試刪除雲端原檔）

8.x 魯棒性與備份
                                                         * T-BK-1 Backups/ 是系統上傳加密備份的唯一目的地；請勿手動修改。

                                                         * T-BK-2 備份類型：

                                                            * 資料庫備份（db）：圖譜（Neo4j dump）、向量（Milvus export 或 segment snapshot）、文件索引與審計日誌（壓縮歸檔）。

                                                            * 程式備份（program）：僅在你執行「成功部署當天」由駕駛艙下達 backup program 才生成；平時不自動。

                                                               * T-BK-3 備份流程採兩階段確認：本機快照→完整性驗證（checksum）→加密→上傳到 Backups/ → 寫入審計記錄；任何一步失敗即不覆蓋舊備份。

                                                               * T-BK-4 不做硬刪舊備份；採保留策略（例如 N 版或 N 天，值由你日後指定），超過門檻再自動清理。

                                                               * T-BK-5 需要算力嗎？

                                                                  * 主要耗的是 CPU/磁碟 I/O 與網路頻寬；不需要 GPU。

                                                                  * 若開啟壓縮/加密，會吃 CPU；建議以「低優先序（nice/ionice）」和「離峰時間」執行，並提供進度與速率限制。

                                                                  * 對推理服務的影響可透過 I/O 節流＋帶寬上限 限制到極低。

9.x 驗收卡（本段）
                                                                     * A-FS-1 開機自動鏡像→驗證→入庫；不合規檔案留在雲端且出告警；入庫成功後才刪雲端。

                                                                     * A-FS-2 Facts/ 去重與互斥：重複不增節點（合併來源/alias），互斥觸發 v18-ERR 流程。

                                                                     * A-FS-3 Maybe_right/ 與 ACTIVE 一致時：不創新事實、正確歸入 evidence 並更新 alias。

                                                                     * A-FS-4 Stories/ 文檔版控：同篇修訂可檢視版史，預設檢索回新版。

                                                                     * A-FS-5 Images_for_Jiran/ 三鍵審核＋權重機制＋跨庫全文比對升級至 1.0；捨棄時資料銷毀但審計留痕。

                                                                     * A-BK-1 觸發 backup db 與 backup program 能產生加密備份於 Backups/，失敗不覆蓋舊檔，並提供審計與校驗值。

1. 不合規者保留在雲端並出告警(我的意見不用告警，放在那我就知道了)。2. 按上傳時間新的放前面排序展示。3.T-IMG-4 入庫後的向量與標註，初期只進暫存池（TTL）；你可在駕駛艙選擇「收錄入庫」使其成為長期資產。這個需要我們有壓所照片解析度能力，一張照片存檔剩5MG以下，有這函數或工具很容易調用嗎?如果做得到，那連駕駛艙上傳的照片，規格容許量都能放大，抓上來只是幾秒的時間，然後馬上把它調整解析度到5MG以下，再進行跟其他照片相同步驟。如果做得到，上傳容許30MG，如果做不到，上傳只允許5MG含以下。短期照片很少，所以照你說的，取用照片不刪除，反而建立索引。讓計然以後引用資料庫，久了圖資料庫節點接近，就會逐步認識物理世界。比如捲積雲，雖然可能有20張圖片都不一樣，但解構大意會類似。比如孫悟空，這個虛構的人物，雖然他沒有真實的樣貌，但對人類來說，不管它長怎樣的圖片，看一眼就能知道這是孫悟空，我要計然有這種能力，4. 程式備份（program）：僅在你執行「成功部署當天后的每一天」，要由駕駛艙下達 backup program 才生成；平時不自動。T-BK-4 不做硬刪舊備份；採保留策略（ 5 版)。5.T-BK-5備份時機依然是伺服器開機，只是給它比較低優先權，cpu忙正事它就緩一點，但一樣不能當機。6. 剛忘了說，抓雲端硬碟檔案執行如果當機後，不能一再重複累積的指令，導致塞了一大堆不能執行的指令。符合我的指令的都同意，其餘的繼續討論
ChatGPT 說：
懂，你這 6 點我全數收斂進 V18，只改必要條款、不發散。下面是「可直接落檔」的更新版——我已把你話語轉成可執行規格句式；你同意就寫回 V18（並標註版本）。
V18—檔案入口／影像／備份／魯棒性（v18-FS-02 + v18-IMG-Scale-01 + v18-BK-02 + v18-RB-01）
4.x Google Drive 入口（修）
                                                                        * T-FS-2'（修） 鏡像→驗證→入庫流程中，不合規檔案保留於雲端原位，不發告警；僅在駕駛艙「未處理清單」中列示。

                                                                        * T-FS-2''（補） 駕駛艙的「未處理清單」與各目錄列表，一律以上傳時間倒序（新檔在前）展示。

7.x 影像審核與長期化（修）
                                                                           * T-IMG-1（不變） 三鍵審核：同意標註(0.7)／自行標註(0.8或0.9)／捨棄（審計留痕）。

                                                                           * T-IMG-2（不變） 入庫前做跨 L1–L4 全文一致性比對（忽略標點）；整段全匹配則權重提升至 1.0 再入庫。

                                                                           * T-IMG-3（補） 審核通過後之影像與標註/向量移入長期資產（長期存儲＋索引），不使用 TTL；未審前仍為暫存（TTL）。

                                                                           * T-IMG-ORDER（新） 審核面板以上傳時間新→舊排序。

影像上傳與壓縮策略
                                                                              * T-IMG-SIZE-0（新） 允許上傳上限依能力自動切換：

                                                                                 1. 若 IMG_AUTO_DOWNSCALE=ON：公開端與駕駛艙均允許單張 ≤30MB 上傳；接收後必經即時降檔，將檔案尺寸壓至 ≤5MB 再入後續流程。

                                                                                 2. 若 IMG_AUTO_DOWNSCALE=OFF：單張上傳門檻為 ≤5MB；超出直接拒收（不告警，列於未處理清單）。

                                                                                    * T-IMG-SIZE-1（新） 「即時降檔管線」規格：

                                                                                       1. 自動偵測 MIME（jpeg/png/webp），優先轉為 webp 或 jpeg；

                                                                                       2. 以最大邊長上限（如 2560px，值可後續指定）與品質迭代雙策略達到目標尺寸 4.8–5.0MB；

                                                                                       3. 失敗則回退下一檔：更小最大邊長→再壓品質；仍失敗才標記為未處理。

                                                                                          * T-IMG-SIZE-2（新） 降檔為純 CPU/I/O 任務，低優先權執行；失敗不阻塞整體入庫。

                                                                                          * T-IMG-IDX（新） 所有通過審核之影像都建立長期索引（向量＋倒排），以利「概念聚合」逐步形成概念桶（concept buckets）（如「卷積雲」「孫悟空」等），供後續辨識與引用。

你問「有沒有現成函數可調」—可行：本規格以「內建影像轉檔模組」實作，支援即時壓縮與尺寸調整；屬工程落地範疇，不需 GPU。
8.x 備份（修）
                                                                                             * T-BK-2'（修） Program：僅在「成功部署當天之後的每一天」，由你在駕駛艙主動下達 backup program 才產生程式備份；平時不自動。

                                                                                             * T-BK-4'（修） 備份保留策略：保留最近 5 版，超過自動清理（不做硬刪以外的備份檔案）。

                                                                                             * T-BK-5'（修） 備份時機：伺服器開機即觸發資料庫備份任務（db-only），任務以低優先度執行（CPU/I/O 節流、頻寬上限），不可造成當機；backup program 不隨開機自動觸發，仍採人工指令。

8.y 魯棒性與指令冪等（新）
                                                                                                * T-RB-IDEMP-1 雲端抓取與處理指令全部採冪等語義：每個工作具 job_id（內容雜湊＋路徑）；重啟後重放不會重複生效。

                                                                                                * T-RB-IDEMP-2 指令佇列採租約機制（lease）＋心跳；當機後未完成的 lease 自動釋放，不會累積成不可執行堆積。

                                                                                                * T-RB-IDEMP-3 為避免狂重試，對失敗任務採指數退避＋最大重試 N 次；超限移入「人工檢視」佇列（倒序展示）。

                                                                                                * T-RB-IDEMP-4 每步均落審計記錄（含 job_id/開始/結束/結果/重試次數）；但不推送告警，僅在駕駛艙可視。

________________


參數預設（可後續再改）
                                                                                                   * IMG_AUTO_DOWNSCALE=ON（→ 允收 ≤30MB，上線即降至 ≤5MB）

                                                                                                   * MAX_IMAGE_LONG_EDGE=2560（影像最大邊長）

                                                                                                   * BACKUP_ON_BOOT_DB=ON，BACKUP_ON_BOOT_PROGRAM=OFF
V18—備份條款（最終版 v18-BK-03）
T-BK-4’’（Database 備份：自動、留 5 版）
                                                                                                      * 觸發：每次伺服器開機即啟動 Database 備份（db-only） 背景任務。

                                                                                                      * 上傳目的地：agentic AI/Backups/database/。

                                                                                                      * 保留策略：只保留最新 5 版；超過即刪最舊的備份檔（僅限 Backups/database 內）。

                                                                                                      * 資源策略：低優先序執行（CPU/I/O 節流、頻寬上限），不使用 GPU，不得造成當機。

                                                                                                      * 上傳語義：原子化上傳（.part → 成功後改名）、斷點續傳，並產生 checksum（與 manifest）以便還原驗證。

                                                                                                      * 冪等：同一輪開機只記錄一次成功備份；當機重啟不會重複產生多份同時期備份。

T-BK-5’’（Program 備份：人工、留 2 版）
                                                                                                         * 觸發：僅當你在駕駛艙手動下達 backup program 時才執行（不用每天）。

                                                                                                         * 上傳目的地：agentic AI/Backups/program/。

                                                                                                         * 保留策略：只保留最新 2 版；超過即刪最舊的備份檔（僅限 Backups/program 內）。

                                                                                                         * 上傳語義：同 T-BK-4’’ 的原子化上傳、斷點續傳、checksum＋manifest。

                                                                                                         * 小提醒：兩類備份都主要吃 CPU/磁碟 I/O/網路，不吃 GPU；我已固定為低優先度，確保不影響推理服務。
________________


可選小補強（要寫入就回「同意 #編號」）
                                                                                                            1. #R-ATOMIC：每個備份檔旁生成 manifest.json（列出內容、檔案大小、雜湊、建立時間、版本），恢復時先比對 manifest 再還原，避免半檔案。

                                                                                                            2. #R-RESTORE-DRYRUN：新增 restore-verify <db|program> 指令，做離線還原演練（到暫存目錄），只驗證完整性，不影響線上資料。

                                                                                                            3. #R-ENCRYPT：備份上傳前本機加密（你提供金鑰或用 KMS），雲端端到端都是密文。

                                                                                                            4. #R-NAMING：備份檔名統一：<type>-<host>-<YYYYMMDDThhmmssZ>-<short-hash>.tar.gz（同一時間多台機器也不會撞名）。